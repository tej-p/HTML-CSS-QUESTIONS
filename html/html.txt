Question-What is !important?

Answer-
In CSS, important means that only the ! important property value is to be applied to an element and
all other declarations on the element are to be ignored. In other words, an important rule can be
used to override other styling rules in CSS.

Question-What is the box model?

Answer-
In CSS, the term "box model" is used when talking about design and layout.The CSS box model is
essentially a box that wraps around every HTML element. It consists of: margins, borders, padding,
and the actual content.

Question-What is the difference between position absolute, relative and fixed?

Answer-
Relative Position: 
                Setting the top, right, bottom, and left properties of an element with
position: relative; property will cause it to adjust from its normal position. The other objects or
elements will not fill the gap.

Absolute Position: 
                An element with position: absolute; will cause it to adjust its position with 
respect to its parent. If no parent is present, then it uses the document body as parent.

Fixed Position:
            Position: fixed; property applied to an element will cause it to always stay in the same 
place even if the page is scrolled. To position the element we use top, right, bottom, left 
properties.

Question-What is CSS positioning?

Answer-
The CSS position property is used to set position for an element. it is also used to place an element
behind another and also useful for scripted animation effect.

You can position an element using the top, bottom, left and right properties. These properties can be 
used only after position property is set first. A position element's computed position property is 
relative, absolute, fixed or sticky.

These are some css positioning property:

CSS Static Positioning
CSS Fixed Positioning
CSS Relative Positioning
CSS Absolute Positioning

Question-the difference between display none and display hidden

Answer-
the difference between display: “none”; and visibility: “hidden”; right from the name itself we can 
tell the difference as display: “none”; completely gets rids of the tag, as it had never existed in 
the HTML page whereas visibility: “hidden”; just makes the tag invisible, it will still on the HTML 
page occupying space it’s just invisible.

Question-Difference between flex and grid? Where to use it?

Answer-
Grid:
    CSS Grid Layout, is a two-dimensional grid-based layout system with rows and columns, making it 
easier to design web pages without having to use floats and positioning. Like tables, grid layout 
allow us to align elements into columns and rows.

To get started you have to define a container element as a grid with display: grid, set the column 
and row sizes with grid-template-columns and grid-template-rows, and then place its child elements 
into the grid with grid-column and grid-row.

Flexbox: 
        The CSS Flexbox offers a one-dimensional layout. It is helpful in allocating and aligning 
the space among items in a container (made of grids). It works with all kinds of display devices and 
screen sizes.
To get started you have to define a container element as a grid with display: flex;

Difference Between Grid and Flexbox:
1. Dimensionality and Flexibility:
                                Flexbox offers greater control over alignment and space distribution
 between items. Being one-dimensional, Flexbox only deals with either columns or rows.
Grid has two-dimension layout capabilities which allow flexible widths as a unit of length. 
This compensates for the limitations in Flex.

2. Alignment:

Flex Direction allows developers to align elements vertically or horizontally, which is used when 
developers create and reverse rows or columns.
CSS Grid deploys fractional measure units for grid fluidity and auto-keyword functionality to 
automatically adjust columns or rows.

3. Item Management

Flex Container is the parent element while Flex Item represents the children. The Flex Container can 
ensure balanced representation by adjusting item dimensions. This allows developers to design for 
fluctuating screen sizes.
Grid supports both implicit and explicit content placement. Its inbuilt automation allows it to 
automatically extend line items and copy values into the new creation from the preceding item.

Question-What is BEM?

Answer-
BEM (which stands for Block-Element-Modifier) is a naming convention standard for CSS class names. 
It has fairly wide adoption and is immensely useful in writing CSS that is easier to read, 
understand, and scale.

Question-What is the z-index? What is the stacking context?

Answer-
Z Index ( z-index ) is a CSS property that defines the order of overlapping HTML elements. Elements 
with a higher index will be placed on top of elements with a lower index.Z index only works 
on positioned elements ( position:absolute , position:relative , or position:fixed ).

The stacking context is a three-dimensional conceptualization of HTML elements along an imaginary 
z-axis relative to the user, who is assumed to be facing the viewport or the webpage. HTML elements 
occupy this space in priority order based on element attributes.

Question-Explain briefly what happens when you hit a url? explain DNS lookup

Answer-
Steps for what happens when we enter a URL :

1. Browser checks cache for DNS entry to find the corresponding IP address of website.
It looks for following cache. If not found in one, then continues checking to the next until found.
    Browser Cache
    Operating Systems Cache
    Router Cache
    ISP Cache

2. If not found in cache, ISP’s (Internet Service Provider) DNS server initiates a DNS query to find 
IP address of server that hosts the domain name.
The requests are sent using small data packets that contain information content of request and IP 
address it is destined for.

3. Browser initiates a TCP (Transfer Control Protocol) connection with the server using 
synchronize(SYN) and acknowledge(ACK) messages.

4. Browser sends an HTTP request to the web server. GET or POST request.

5. Server on the host computer handles that request and sends back a response. It assembles a 
response in some format like JSON, XML and HTML.

6. Server sends out an HTTP response along with the status of response.

7. Browser displays HTML content

8. Finally, Done.

Question-What is a URLs full form? Explain what a url is and the four parts it consists of The 
protocol in use The hostname of the server The location of the file The arguments to the file

Answer-
A URL (Uniform Resource Locator) is a unique identifier used to locate a resource on the Internet. 
It is also referred to as a web address. URLs consist of multiple parts -- including a protocol and 
domain name -- that tell a web browser how and where to retrieve a resource.

The four main components of URLs are the protocol, domain, path, and query.

1. A scheme: The scheme identifies the protocol to be used to access the resource on the Internet. 
It can be HTTP (without SSL) or HTTPS (with SSL).

2. A host: The host name identifies the host that holds the resource. For example, www.example.com. 
A server provides services in the name of the host, but hosts and servers do not have a one-to-one
 mapping. Refer to Host names.
Host names can also be followed by a port number. Refer to Port numbers. Well-known port numbers for 
a service are normally omitted from the URL. Most servers use the well-known port numbers for HTTP 
and HTTPS , so most HTTP URLs omit the port number.

A path: The path identifies the specific resource in the host that the web client wants to access. 
For example, /software/htp/cics/index.html.
A query string. If a query string is used, it follows the path component, and provides a string of 
information that the resource can use for some purpose (for example, as parameters for a search or 
as data to be processed). The query string is usually a string of name and value pairs; for example,
term=bluebird. Name and value pairs are separated from each other by an ampersand (&); for example, 
term=bluebird&source=browser-search.

Question-What is HTTP protocol?

Answer-
HTTP stands for HyperText Transfer Protocol.

It is a protocol used to access the data on the World Wide Web (www).

The HTTP protocol can be used to transfer the data in the form of plain text, hypertext, audio, 
video, and so on.

This protocol is known as HyperText Transfer Protocol because of its efficiency that allows us to 
use in a hypertext environment where there are rapid jumps from one document to another document.

HTTP is similar to the FTP as it also transfers the files from one host to another host. But, HTTP 
is simpler than FTP as HTTP uses only one connection, i.e., no control connection to transfer the 
files.

HTTP is used to carry the data in the form of MIME-like format.

HTTP is similar to SMTP as the data is transferred between client and server. The HTTP differs from 
the SMTP in the way the messages are sent from the client to the server and from server to the 
client. SMTP messages are stored and forwarded while HTTP messages are delivered immediately.

Question-What is TCP Protocol?

Answer-
TCP stands for Transmission Control Protocol. It is a transport layer protocol that facilitates the 
transmission of packets from source to destination. It is a connection-oriented protocol that means 
it establishes the connection prior to the communication that occurs between the computing devices 
in a network. This protocol is used with an IP protocol, so together, they are referred to as a 
TCP/IP.

The main functionality of the TCP is to take the data from the application layer. Then it divides the
data into a several packets, provides numbering to these packets, and finally transmits these 
packets to the destination. The TCP, on the other side, will reassemble the packets and transmits 
them to the application layer. As we know that TCP is a connection-oriented protocol, so the 
connection will remain established until the communication is not completed between the sender and 
the receiver.

Question-Explain all the different HTTP methods?

Answer-
For HTTP/1.1, the set of common methods are defined below. This set can be expanded based on the 
requirements. The name of these methods is case sensitive, and they must be used in uppercase.

Method and Description
i) GET:
        This method retrieves information from the given server using a given URI. GET request can retrieve 
the data. It can not apply other effects on the data.
ii) HEAD:
        This method is the same as the GET method. It is used to transfer the status line and header section 
only.
iii) POST:
            The POST request sends the data to the server. For example, file upload, customer information, etc. 
using the HTML forms.
iv) PUT:
        The PUT method is used to replace all the current representations of the target resource with the 
uploaded content.
v) DELETE:
            The DELETE method is used to remove all the current representations of the target resource, which is 
given by URI.
vi) CONNECT:
            This method establishes a tunnel to the server, which is identified by a given URI.
vii) OPTIONS:
            This method describes the options of communication for the target resource.

Question-What are HTTP headers?

Answer-
An HTTP header is a field of an HTTP request or response that passes additional context and metadata 
about the request or response. For example, a request message can use headers to indicate it's 
preferred media formats, while a response can use header to indicate the media format of the 
returned body.

Question-What are some HTTP response codes? what does it mean? 2xx, 3xx, 4xx, 5xx

Answer-
1. 2xx successful – the request was successfully received, understood, and accepted. 

2. 3xx redirection – further action needs to be taken in order to complete the request. 

3. 4xx client error – the request contains bad syntax or cannot be fulfilled. 

4. 5xx server error – the server failed to fulfil an apparently valid request.

Question-What does cache control on http response mean?

Answer-
Cache-control is an HTTP header used to specify browser caching policies in both client requests and 
server responses. Policies include how a resource is cached, where it's cached and its maximum age 
before expiring (i.e., time to live).

Question-What is polling?

Answer-
Polling is a technique by which the client asking the server for new data regularly.

Question-What is long polling?

Answer-
HTTP Long Polling is a technique used to push information to a client as soon as possible on the 
server. As a result, the server does not have to wait for the client to send a request.

In Long Polling, the server does not close the connection once it receives a request from the client. Instead, the server responds only if any new message is available or if a timeout threshold is reached.

Once the client receives a response, it immediately sends a new request to the server to have a new 
pending connection to send data to the client, and the operation is repeated. With this approach, 
the server emulates a Realtime Server Push feature.

Question-What are web sockets?

Answer-
WebSocket: WebSocket is bidirectional, a full-duplex protocol that is used in the same scenario of 
client-server communication, unlike HTTP it starts from ws:// or wss://. It is a stateful protocol, 
which means the connection between client and server will keep alive until it is terminated by 
either party (client or server). After closing the connection by either of the client and server, 
the connection is terminated from both ends. 

Question-How is web sockets different from HTTP?

Answer-Unlike HTTP, where you have to constantly request updates, with websockets, updates are sent 
immediately when they are available. WebSockets keeps a single, persistent connection open while 
eliminating latency problems that arise with HTTP request/response-based methods.

Question-What is HTTPS?

Answer-
Hypertext transfer protocol secure (HTTPS) is the secure version of HTTP, which is the primary 
protocol used to send data between a web browser and a website. HTTPS is encrypted in order to 
increase security of data transfer. This is particularly important when users transmit sensitive 
data, such as by logging into a bank account, email service, or health insurance provider.

Any website, especially those that require login credentials, should use HTTPS. In modern web 
browsers such as Chrome, websites that do not use HTTPS are marked differently than those that are. 
Look for a green padlock in the URL bar to signify the webpage is secure. Web browsers take HTTPS 
seriously; Google Chrome and other browsers flag all non-HTTPS websites as not secure.

Question-What is Cross Origin Resource Sharing? ( CORS ) Why do we need it?

Answer-
Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to 
indicate any origins (domain, scheme, or port) other than its own from which a browser should permit
loading resources.

Question-What does Access-Control-Allow-Origin header do?

Answer-
The Access-Control-Allow-Origin header is included in the response from one website to a request 
originating from another website, and identifies the permitted origin of the request.

Question-What is clickjacking? How do you fix it?

Answer-
Clickjacking is an attack that fools users into thinking they are clicking on one thing when they are
actually clicking on another. Its other name, user interface (UI) redressing, better describes what 
is going on.

In order to fix the issue, we must know the underlying reason that is causing the issue. 
Clickjacking is caused due to allowing permission to a third party website to embed the vulnerable 
site using Iframe. Disallowing this can be done by setting HTTP headers that direct browser to not 
allow the target website to be iframed. This can be done by configuring server on the following two 
response headers: X-Frame-Options Content-Security-Policy. It can also be done using JavaScript code 

X-Frame-Options:
                X-Frame-Options is a response header. Developers can use it to protect their site 
against clickjacking. It can be used to indicate whether or not a browser should be allowed to 
render a page in an Iframe by have its value set as any of the following:

        X-FRAME-OPTIONS: DENY
        By specifying DENY, no site will be allowed to load the page in a frame.

        X-FRAME-OPTIONS: SAMEORIGIN
        On the other hand, if you specify SAMEORIGIN, you can still use the page in a frame as long 
        as the site including it in a frame is the same as the one serving the page.

        X-FRAME-OPTIONS: ALLOW-FROM uri
        If you specify this, then the site can be displayed in a frame only by uri specified. 
        However, this is an obsolete directive that no longer works in modern browsers.

Question-What are some performance metrics for your website?

Answer-
1. Website Speed
2. Time to Title
3. Time to Start Render
4. Time to Interact
5. DNS Lookup Speed
6. Bounce Rate
7. Requests Per Second
8. Error Rate
9. Time to First Byte/Last Byte
10. Conversion Rate

Question-What does the following term mean?
                Time to first byte,
                Page load time

Answer-
Time to First Byte (TTFB) refers to the time between the browser requesting a page and when it 
receives the first byte of information from the server. This time includes DNS lookup and 
establishing the connection using a TCP handshake and SSL handshake if the request is made over 
https.

Page load time is the time it takes for a page to load, measured from navigation start to the start 
of the load event.

Question-What do CDN or Content Delivery Networks do? When do you need a CDN?

Answer-
A content delivery network (CDN) refers to a geographically distributed group of servers which work 
together to provide fast delivery of Internet content. A CDN allows for the quick transfer of assets 
needed for loading Internet content including HTML pages, javascript files, stylesheets, images, and 
videos.

A CDN helps e-commerce sites deliver content quickly and efficiently even during times of heavy 
traffic, like Black Friday and the holidays. Government. Large, content-heavy websites can deliver 
vital information to citizens much more quickly and efficiently by using a CDN.

Question-What is the difference between Client Side Renderring and Server Side Renderring?

Answer-
Client-side rendering manages the routing dynamically without refreshing the page every time a user 
requests a different route. But server-side rendering is able to display a fully populated page on 
the first load for any route of the website, whereas client-side rendering displays a blank page 
first.

In CSR, the initial page load takes longer compared to SSR because it requires more JavaScript to be 
downloaded and parsed. A second HTTP request needs to be made to load the content then more 
JavaScript is needed to generate the template.

Question-What is Progressive Renderring?

Answer-
Progressive Rendering is the technique of sequentially rendering portions of a webpage in the server 
and streaming it to the client in parts without waiting for the whole page to rendered.

Question-What is the difference between Preloading and Prefetching resources?

Answer-
Preload is an early fetch instruction to the browser to request a resource needed for a page 
(key scripts, Web Fonts, hero images). Prefetch serves a slightly different use case — a future 
navigation by the user (e.g between views or pages) where fetched resources and requests need to 
persist across navigations.

Question-What are service workers?

Answer-
A service worker is a type of web worker. It's essentially a JavaScript file that runs separately 
from the main browser thread, intercepting network requests, caching or retrieving resources from 
the cache, and delivering push messages.